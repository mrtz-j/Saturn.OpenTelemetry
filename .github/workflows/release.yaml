env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
  DOTNET_MULTILEVEL_LOOKUP: '0'
  DOTNET_NOLOGO: 'true'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 'true'
  FORCE_COLOR: '1'
  NUGET_XMLDOC_MODE: ''
jobs:
  create-github-release:
    needs:
    - nuget-publish
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ github.token }}
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Create Release
      run: gh release create ${{ github.ref }} --generate-notes
  nuget-pack:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install Nix
      uses: cachix/install-nix-action@V28
    - name: Set up cachix
      uses: cachix/cachix-action@v15
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: saturnopentelemetry
    - name: Restore dependencies
      run: nix -Lv develop .#default --command dotnet restore
    - name: Build
      run: nix -Lv develop .#default --command dotnet build --no-restore --configuration
        Release
    - name: Pack
      run: nix -Lv develop .#default --command dotnet pack --configuration Release
    - name: Upload NuGet artifact (plugin)
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package
        path: src/Saturn.OpenTelemetry/bin/Release/Saturn.OpenTelemetry.*.nupkg
  nuget-publish:
    needs:
    - nuget-pack
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install Nix
      uses: cachix/install-nix-action@V28
    - name: Set up cachix
      uses: cachix/cachix-action@v15
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: saturnopentelemetry
    - name: Download NuGet artifact
      uses: actions/download-artifact@v4
      with:
        name: nuget-package
        path: packed
    - name: Prep packages
      run: nix -Lv develop .#default --command dotnet nuget add source --username
        mrtz-j --password ${{ secrets.NUGET_AUTH_TOKEN }} --store-password-in-clear-text
        --name github "https://nuget.pkg.github.com/mrtz-j/index.json"
    - name: Publish GitHub package
      run: nix -Lv develop .#default --command dotnet nuget push packed/*.nupkg --api-key
        ${{ secrets.NUGET_AUTH_TOKEN }}  --source "github" --skip-duplicate
    - id: identify-dotnet
      name: Identify .NET
      run: nix -Lv develop .#default --command bash -c "echo dotnet=$(which dotnet)
        >> $GITHUB_OUTPUT"
    - name: Publish NuGet package
      uses: G-Research/common-actions/publish-nuget@2b7dc49cb14f3344fbe6019c14a31165e258c059
      with:
        dotnet: ${{ steps.identify-dotnet.outputs.dotnet }}
        nuget-key: ${{ secrets.NUGET_API_KEY }}
        nupkg-dir: packed/
        package-name: Saturn.OpenTelemetry
name: Release
on:
  push:
    tags:
    - '*.*.*'
