# yaml-language-server: $schema=https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-workflow.json
name: Release

on:
  push:
    tags:
      - "*.*.*"
env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  NUGET_XMLDOC_MODE: ""
  DOTNET_MULTILEVEL_LOOKUP: 0

jobs:
  nuget-pack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Nix
        uses: cachix/install-nix-action@V28
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Restore dependencies
        run: nix develop -f . default --command dotnet restore
      - name: Build
        run: nix develop -f . default --command dotnet build --no-restore --configuration Release
      - name: Pack
        run: nix develop -f . default --command dotnet pack --configuration Release
      - name: Upload NuGet artifact (plugin)
        uses: actions/upload-artifact@v4
        with:
          name: nuget-package
          path: src/Saturn.OpenTelemetry/bin/Release/Saturn.OpenTelemetry.*.nupkg

  nuget-publish:
    runs-on: ubuntu-latest
    needs: nuget-pack
    permissions:
      id-token: write
      attestations: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Nix
        uses: cachix/install-nix-action@V28
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Download NuGet artifact
        uses: actions/download-artifact@v4
        with:
          name: nuget-package
          path: packed
      - name: Prep packages
        run: nix develop -f . default --command dotnet nuget add source --username mrtz-j --password ${{ secrets.NUGET_AUTH_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/mrtz-j/index.json"
      - name: Push package to GitHub packages
        run: nix develop -f . default --command dotnet nuget push packed/nuget-package/*.nupkg --api-key ${{ secrets.NUGET_AUTH_TOKEN }}  --source "github"

  create-github-release:
    runs-on: ubuntu-latest
    needs: nuget-publish
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ github.token }}
      - name: Create Release
        run: gh release create ${{ github.ref }} --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
